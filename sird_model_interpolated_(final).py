# -*- coding: utf-8 -*-
"""SIRD Model - interpolated (final)

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Hmm8rrgNgveH_NKAZUz2ycyTTeOiMlSz
"""

import numpy as np 
import pandas as pd
import matplotlib.pyplot as pyplot
import scipy.integrate as integrate

HK = pd.read_csv('https://raw.githubusercontent.com/Kayx23/group-project/main/HK-output.csv')

HK

HK.columns

HK['deaht-rate']

# make PDF (daily new cases)
CDF_cases = 'cumulative-cases'
HK=HK.assign(PDF_cases = HK[CDF_cases]-HK[CDF_cases].shift(1))

# graph new cases, recovered cases, and deaths altogether

# handles
ax = pyplot.gca()  # get current axis
f = pyplot.gcf()   # get current figure

# plot
pyplot.plot(HK['Date'],HK['PDF_cases'])
pyplot.plot(HK['Date'],HK['cumulative-recoveries'])
pyplot.plot(HK['Date'],HK['cumulative-deaths'])

# adjust the number of x-axis ticks to show only some dates
ax.set_xticks(ax.get_xticks()[::6])
pyplot.xticks(rotation=45,ha='right')
# pyplot.rc('xtick', labelsize=8) # font size

# labels
pyplot.title("2003 Hong Kong SARS Cases")
pyplot.legend(["New Cases","Cumulative Recoveries","Cumulative Deaths"])
pyplot.ylabel("Case Count")

# export
f.subplots_adjust(bottom=0.23)  # making room for bottom labels
pyplot.savefig("figure2.1.1.png", dpi = 300)

pyplot.show()

# just the infection curve 

ax = pyplot.gca()  # get current axis
f = pyplot.gcf()   # get current figure

# add HK data 
pyplot.plot(HK['Date'],HK['PDF_cases'])         # infected

ax.set_xticks(ax.get_xticks()[::6])
pyplot.xticks(rotation=45, ha='right')

# labels
pyplot.ylabel("Case Count")
pyplot.title("2003 Hong Kong SARS Daily New Cases")

# export
f.subplots_adjust(bottom=0.23)  # making room for bottom labels
pyplot.savefig("daily.png", dpi = 300)

pyplot.show()

"""### SIRD Model (FINAL MODEL)"""

# SIRD
def dS_dt(I,S,t): 
      return(-beta*I*S)

def dI_dt(I,S,t):
      return(beta*I*S - (gamma+mu)*I)

def dR_dt(I,t):
    return(gamma*I)

def dD_dt(I,t):
    return(mu*I)

def dN_dt(N,t):
    S,I,R, D = N
    return([dS_dt(I,S,t),
            dI_dt(I,S,t),
            dR_dt(I,t),
            dD_dt(I,t)])

beta = 0.00042   # transmission rate
mu = 0.17  # death rate
gamma = 0.80823    # recovery rate  (this does not need to be this way)

# solver
ndays = 117
No = [2999+300,1,0,0] # IC 
t = np.linspace(0,ndays,117) 
Nfit = integrate.odeint(dN_dt,No,t) # solution

# handles
ax = pyplot.gca()  # get current axis
f = pyplot.gcf()   # get current figure

# plotting SIR results 
# pyplot.plot(t,Nfit[:,0],'--',alpha=0.3)      # S
pyplot.plot(t,Nfit[:,1],'--',alpha=0.6)  # I
pyplot.plot(t,Nfit[:,2],'--',alpha=0.6)      # R
pyplot.plot(t,Nfit[:,3],'--',alpha=0.6)      # D

# add HK data 
pyplot.plot(HK['Date'],HK['PDF_cases'])
pyplot.plot(HK['Date'],HK['cumulative-recoveries'])
pyplot.plot(HK['Date'],HK['cumulative-deaths'])

# adjust the number of x-axis ticks to show only some dates
ax.set_xticks(ax.get_xticks()[::6])
pyplot.xticks(rotation=45, ha='right')

# labels
pyplot.ylabel("Case Count")
pyplot.title("Simulation 7 v.s. Hong Kong Reported Data")
pyplot.legend(["SIRD Infected","SIRD Recovered","SIRD Dead",
               "HK Infected","HK Recovered","HK Dead"],labelspacing=0.3)  # fontsize="small",ncol=1,

# export
f.subplots_adjust(bottom=0.23)  # making room for bottom labels
pyplot.savefig("final-model.png", dpi = 300)

pyplot.show()

# just the infection curve 

ax = pyplot.gca()  # get current axis
f = pyplot.gcf()   # get current figure

pyplot.plot(t,Nfit[:,1],'--')  # I

# add HK data 
pyplot.plot(HK['Date'],HK['PDF_cases'])         # infected

# adjust the number of x-axis ticks to show only some dates
ax.set_xticks(ax.get_xticks()[::6])
pyplot.xticks(rotation=45, ha='right')

# labels
pyplot.ylabel("Case Count")
pyplot.title("Infected Cases")
pyplot.legend(["SIRD Infected","HK Infected"],labelspacing=0.3)

# export
f.subplots_adjust(bottom=0.23)  # making room for bottom labels
pyplot.savefig("final-model-pdf.png", dpi = 300)

pyplot.show()

print(np.array(HK['cumulative-recoveries'])[116] - Nfit[:,2][116]) # R
print(np.array(HK['cumulative-deaths'])[116] - Nfit[:,3][116]) # D
print(Nfit[:,1].max()-155) # peak

print(round(Nfit[:,1].sum()-1755,2))  # want this to be 1755

Nfit[:,1].max()

HK['PDF_cases'].argmax()

"""### Simulations"""

beta = 0.00042   # transmission rate
mu = 0.17  # death rate
gamma = 0.808    # recovery rate  (this does not need to be this way)

# solver
ndays = 117
No = [2999+300,1,0,0] # IC 
t = np.linspace(0,ndays,117) 
Nfit = integrate.odeint(dN_dt,No,t) # solution 

# handles
ax = pyplot.gca()  # get current axis
f = pyplot.gcf()   # get current figure

# plotting SIR results 
# pyplot.plot(t,Nfit[:,0],'--',alpha=0.3)      # S
pyplot.plot(t,Nfit[:,1],'--',linewidth=0.8)  # I
pyplot.plot(t,Nfit[:,2],'--',alpha=0.6)      # R
pyplot.plot(t,Nfit[:,3],'--',alpha=0.6)      # D

# add HK data 
pyplot.plot(HK['Date'],HK['PDF_cases'])
pyplot.plot(HK['Date'],HK['cumulative-recoveries'])
pyplot.plot(HK['Date'],HK['cumulative-deaths'])

# adjust the number of x-axis ticks to show only some dates
ax.set_xticks(ax.get_xticks()[::6])
pyplot.xticks(rotation=45, ha='right')

# labels
pyplot.ylabel("Case Count")
pyplot.title("Hong Kong SARS SIR Modelled Cases v.s. Actual Cases")
pyplot.legend(["SIR Infected","SIR Recovered","SIR Dead",
               "HK Infected","HK Recovered","HK Dead"],labelspacing=0.3)  # fontsize="small",ncol=1,

pyplot.show()

print(round(Nfit[:,1].sum()-1755,2))  # want this to be 1755
print(np.array(HK['cumulative-recoveries'])[116] - Nfit[:,2][116]) # R
print(np.array(HK['cumulative-deaths'])[116] - Nfit[:,3][116]) # D
# print(Nfit[:,1].max()-155) # peak

HK['PDF_cases'].argmax()

Nfit[:,1].argmax()



"""PPT"""

beta = 0.00035   # transmission rate
mu = 0.06  # death rate
gamma = 0.508    # recovery rate  (this does not need to be this way)

# solver
ndays = 120
No = [2500,3,0,0] # IC 
t = np.linspace(0,ndays,117) 
Nfit = integrate.odeint(dN_dt,No,t) # solution 

# plotting SIR results 
pyplot.plot(t,Nfit[:,1])  # I
pyplot.plot(t,Nfit[:,2])      # R
pyplot.plot(t,Nfit[:,3])      # D
# pyplot.plot(t,Nfit[:,0])      # S


# labels
pyplot.ylabel("Case Count")
pyplot.title("Simulated SIRD")
pyplot.legend(["I","R","D"],labelspacing=0.3)  # fontsize="small",ncol=1,


# export
f.subplots_adjust(bottom=0.23)  # making room for bottom labels
pyplot.savefig("sim.png", dpi = 300)


pyplot.show()

